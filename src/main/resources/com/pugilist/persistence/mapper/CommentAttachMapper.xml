<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pugilist.persistence.dao.CommentAttachMapper">
  <resultMap id="BaseResultMap" type="com.pugilist.model.CommentAttach">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="objId" jdbcType="BIGINT" property="objId" />
    <result column="objType" jdbcType="VARCHAR" property="objType" />
    <result column="commentId" jdbcType="BIGINT" property="commentId" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="suffix" jdbcType="VARCHAR" property="suffix" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, objId, objType, commentId, url, suffix
  </sql>
  <select id="selectByExample" parameterType="com.pugilist.model.CommentAttachExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_comment_attach
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_comment_attach
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from p_comment_attach
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pugilist.model.CommentAttachExample">
    delete from p_comment_attach
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pugilist.model.CommentAttach">
    insert into p_comment_attach (id, objId, objType, 
      commentId, url, suffix
      )
    values (#{id,jdbcType=BIGINT}, #{objId,jdbcType=BIGINT}, #{objType,jdbcType=VARCHAR}, 
      #{commentId,jdbcType=BIGINT}, #{url,jdbcType=VARCHAR}, #{suffix,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pugilist.model.CommentAttach">
    insert into p_comment_attach
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="objId != null">
        objId,
      </if>
      <if test="objType != null">
        objType,
      </if>
      <if test="commentId != null">
        commentId,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="suffix != null">
        suffix,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="objId != null">
        #{objId,jdbcType=BIGINT},
      </if>
      <if test="objType != null">
        #{objType,jdbcType=VARCHAR},
      </if>
      <if test="commentId != null">
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="suffix != null">
        #{suffix,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pugilist.model.CommentAttachExample" resultType="java.lang.Integer">
    select count(*) from p_comment_attach
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update p_comment_attach
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.objId != null">
        objId = #{record.objId,jdbcType=BIGINT},
      </if>
      <if test="record.objType != null">
        objType = #{record.objType,jdbcType=VARCHAR},
      </if>
      <if test="record.commentId != null">
        commentId = #{record.commentId,jdbcType=BIGINT},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.suffix != null">
        suffix = #{record.suffix,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update p_comment_attach
    set id = #{record.id,jdbcType=BIGINT},
      objId = #{record.objId,jdbcType=BIGINT},
      objType = #{record.objType,jdbcType=VARCHAR},
      commentId = #{record.commentId,jdbcType=BIGINT},
      url = #{record.url,jdbcType=VARCHAR},
      suffix = #{record.suffix,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pugilist.model.CommentAttach">
    update p_comment_attach
    <set>
      <if test="objId != null">
        objId = #{objId,jdbcType=BIGINT},
      </if>
      <if test="objType != null">
        objType = #{objType,jdbcType=VARCHAR},
      </if>
      <if test="commentId != null">
        commentId = #{commentId,jdbcType=BIGINT},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="suffix != null">
        suffix = #{suffix,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pugilist.model.CommentAttach">
    update p_comment_attach
    set objId = #{objId,jdbcType=BIGINT},
      objType = #{objType,jdbcType=VARCHAR},
      commentId = #{commentId,jdbcType=BIGINT},
      url = #{url,jdbcType=VARCHAR},
      suffix = #{suffix,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>